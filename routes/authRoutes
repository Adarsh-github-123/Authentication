const express = require("express");
const bcrypt = require("bcrypt");
const createDB = require("../config/db");
const User = require("../models/userModel");

const {validateName, validateEmail, validatePassword } = require("../utils/validators");

createDB.sync().then( () => {
    console.log("DB is running");
});

const router = express.Router();

let users = {

}

router.post("/signUp", async (req, res) => {
    try{
        const {email, name, password} = req.body;
        
        const userExist = await User.findOne({
            where: {
                email
            }
        });

        if(userExist)
        {
            res.send("User Already Exists");
        }

        if(!validateName(name)){
            res.send("Invalid name");
        }

        if(!validateEmail(email)){
            res.send("Invalid email");
        }

        if(!validatePassword(password)){
            res.send("Invalid pasword")
        }

        const Epassword = await bcrypt.hash(password, 10);

        const saveToDB = {
            name, email, password : Epassword
        }
        const createdUser = await User.create(saveToDB);
        return res.status(201).send("Profile created successfully");
        
    } catch(e){
        return res.status(500).send("error");
    }
})

router.post("/signIn", async (req, res) => {
    try {
        const { email, password} = req.body;

        const userExist = users.hasOwnProperty(email);

        if(!userExist){
            res.send("User does not exist");
        }

        const passCheck = await bcrypt.compare(password, user[email].password);

        if(!passCheck){
            res.send("Password mismatch");
        }

        res.send("Success");

    } catch (e) {
        res.send("error");
    }
})

module.exports = router;